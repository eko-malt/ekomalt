.card.blue-grey.darken id="equipment_#{equipment.id}"
  - process = equipment.raw_processes.where.not(raw_processes: { status: 3 }).first
  .card-content.white-text
    .card-title.text-bold = equipment.name
    - if equipment.broken?
      h5.center = t('old_maltose.status.broken')
    - else
      - unless process.nil?
        - if process.can_archive?
          h5.center.text-red = t('process.can_archive')
        - else
          - if process.current_weight > 0
            .row
              .col.s4
                p = l(process.start_time, format: :short)
                p = process.start_time.strftime('%H:%M')
              .col.s4
                .center = "#{ t('process.raw_residual') }:" if process.finished?
                .center = weight_in_tones(process.current_weight)
              .col.s4
                p.right = l(process.finish_time, format: :short)
                p.right = process.finish_time.strftime('%H:%M')
            = render partial: 'pages/progress', locals: { start_time: process.start_time, finish_time: process.finish_time, finished: process.finished?, color: 'yellow' }
          - else
            h5.center.text-red = t('process.statuses.need_load')
  .card-action
    - if equipment.working?
      - if process.nil?
        = link_to t('process.change_status.load'), new_raw_process_path(equipment: equipment.id)
      - else
        = link_to t('old_maltose.edit'), raw_process_path(process)
        - if process.equipment.druing? && process.finished?
          = link_to t('process.create_batch_from_equipment'), new_grain_batch_path(raw_process: process.id), remote: true, class: 'right'
        - if process.current_weight == 0
          = link_to t('process.change_status.archive'), status_update_raw_process_path(process, status: 'archived'), remote: true, method: :put, class: 'right' if process.can_archive?
        - else
          = link_to t('process.change_status.finish'), status_update_raw_process_path(process, status: 'finished'), remote: true, method: :put, class: 'right' if process.process?